1.ทำไม Binary Search Tree (BST) ค้นหาข้อมูลได้เร็วกว่า Linear Search?

เพราะ BST ช่วยลดจำนวนครั้งที่ต้องเปรียบเทียบข้อมูลโดยการแบ่งครึ่งช่วงที่ต้องค้นหาในแต่ละรอบ

ถ้าต้นไม้สมดุลดี การค้นหาจะใช้เวลาน้อยกว่าการไล่หาข้อมูลทีละตัวแบบ Linear Search

ทำให้ BST มีเวลาเฉลี่ยในการค้นหาข้อมูลที่เร็วกว่า โดยเฉพาะเมื่อข้อมูลมีจำนวนมาก

2.กรณีไหนที่ BST จะช้าพอ ๆ กับ Linear Search?

ถ้าต้นไม้ BST ไม่มีการจัดสมดุล โครงสร้างจะกลายเป็นเส้นตรง ทำให้การค้นหาใช้เวลาเท่ากับ Linear Search

ในกรณีที่ข้อมูลถูกเพิ่มเข้าไปแบบเรียงลำดับ ทำให้ BST ไม่ได้ช่วยลดช่วงการค้นหาเลย

3.Binary Tree กับ Binary Search Tree ต่างกันยังไง?

Binary Tree เป็นโครงสร้างข้อมูลที่แต่ละโหนดมีลูกได้สูงสุด 2 โหนด แต่ไม่มีเงื่อนไขเกี่ยวกับค่าของข้อมูล

Binary Search Tree (BST) มีกฎว่าค่าของโหนดทางซ้ายต้องน้อยกว่า และค่าของโหนดทางขวาต้องมากกว่าโหนดปัจจุบัน

BST ช่วยให้ค้นหาข้อมูลได้เร็วกว่า Binary Tree ปกติ

4.Traversal แบบไหนใช้กับ BST แล้วได้ค่าจากน้อยไปมาก?

ใช้ Inorder Traversal เพราะจะไล่ไปทางซ้ายก่อน แล้วค่อยอ่านค่าปัจจุบัน และไปทางขวา

วิธีนี้ช่วยให้ค่าที่ได้ออกมาถูกจัดเรียงจากน้อยไปมากโดยอัตโนมัติ